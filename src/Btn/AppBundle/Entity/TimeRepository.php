<?php

namespace Btn\AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * TimeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TimeRepository extends EntityRepository
{
    /**
     * Get all times for provided user (get query for pagination)
     *
     * @param User $user
     *
     * @return query query
     **/
    public function getQueryForUser($user)
    {
        $qb = $this->createQueryBuilder('t');

        $qb->add('select',  't')
           ->add('where',   't.user = :user')
           ->add('orderBy', 't.createdAt DESC')
           ->setParameter(':user', $user)
        ;

        return $qb->getQuery();
    }

    public function getReportQuery($conditions)
    {
        $qb = $this->createQueryBuilder('t')
           ->select(array('t', 'u', 'p'))
           ->innerJoin('t.user', 'u')
           ->innerJoin('t.project', 'p')
           ->add('orderBy', 't.createdAt DESC')
        ;

        if (!empty($conditions) && is_array($conditions)) {
            $expr = call_user_func_array(array($qb->expr(), 'andx'), $conditions);
            $qb->where($expr);
        }

        return $qb;
    }

    public function getUserReportForLastDays($user, $period = 7)
    {
        return  $this->getEntityManager()
            ->createQuery(
                'SELECT t, p, u FROM Btn\AppBundle\Entity\Time t '.
                'JOIN t.user u '.
                'JOIN t.project p '.
                'WHERE t.user = :user AND t.createdAt >= :dateFrom '
            )
            ->setParameter('user', $user)
            ->setParameter('dateFrom', new \DateTime('-' . $period . ' days'))
            ->getResult();
    }
}
