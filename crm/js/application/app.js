// Generated by CoffeeScript 1.6.2
/* global Backbone, Marionette, define, _, Moderniz
*/


(function() {
  "use strict";  define(["application/config", "application/router"], function(config, router) {
    var App;

    App = new Marionette.Application();
    App.url = {
      api: "/btntt/web/api/",
      rest: "/btntt/web/rest/"
    };
    App.initializeLayout = function() {
      var _this = this;

      require(["views/layout/main"], function(LayoutView) {
        _this.layoutView = new LayoutView();
      });
      return this;
    };
    App.setUrls = function() {
      var origin;

      origin = Backbone.history.location.origin;
      return _.each(this.url, (function(value, key) {
        this.url[key] = origin + value;
        return this;
      }), this);
    };
    App.getUrl = function(type, route) {
      this.url[type] + route;
      return this;
    };
    App.initApp = function() {
      $.get(this.url.api + "get/init-data/", _.bind(this.onInitData, this));
      return this;
    };
    App.onInitData = function(response) {
      var initData;

      initData = JSON.parse(response);
      if (!initData.user.auth) {
        return window.location = initData.baseUrl + "/login";
      } else {
        this.userData = initData.user;
        this.setUrls();
        return router.initialize();
      }
    };
    App.addRegions({
      content: "#content",
      paginator: "#paginator"
    });
    App.scrollTop = function() {
      if (Modernizr.touch && !window.location.hash) {
        return $(window).load(function() {
          return setTimeout((function() {
            if ($(window).scrollTop() < 20) {
              return window.scrollTo(0, 1);
            }
          }), 0);
        });
      }
    };
    App.addInitializer(function() {
      this.initApp();
      return this.scrollTop();
    });
    return App;
  });

}).call(this);
